/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.   ## Resources - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://www.mailslurp.com/docs/) - [Examples](https://github.com/mailslurp/examples) repository 
 *
 * OpenAPI spec version: 6.5.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http.ts';

/**
* Representation of a webhook for an inbox. The URL specified will be using by MailSlurp whenever an email is received by the attached inbox.
*/
export class WebhookDto {
    /**
    * Does webhook expect basic authentication? If true it means you created this webhook with a username and password. MailSlurp will use these in the URL to authenticate itself.
    */
    'basicAuth'?: boolean;
    /**
    * When the webhook was created
    */
    'createdAt'?: Date;
    /**
    * ID of the Webhook
    */
    'id'?: string;
    /**
    * The inbox that the Webhook will be triggered by
    */
    'inboxId'?: string;
    /**
    * HTTP method that your server endpoint must listen for
    */
    'method'?: WebhookDtoMethodEnum;
    /**
    * Name of the webhook
    */
    'name'?: string;
    /**
    * JSON Schema for the payload that will be sent to your URL via the HTTP method described.
    */
    'payloadJsonSchema'?: string;
    'updatedAt': Date;
    /**
    * URL of your server that the webhook will be sent to. The schema of the JSON that is sent is described by the payloadJsonSchema.
    */
    'url'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "basicAuth",
            "baseName": "basicAuth",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "createdAt",
            "baseName": "createdAt",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": "uuid"
        },
        {
            "name": "inboxId",
            "baseName": "inboxId",
            "type": "string",
            "format": "uuid"
        },
        {
            "name": "method",
            "baseName": "method",
            "type": "WebhookDtoMethodEnum",
            "format": ""
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "payloadJsonSchema",
            "baseName": "payloadJsonSchema",
            "type": "string",
            "format": ""
        },
        {
            "name": "updatedAt",
            "baseName": "updatedAt",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "url",
            "baseName": "url",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return WebhookDto.attributeTypeMap;
    }
    
    public constructor() {
    }
}


export type WebhookDtoMethodEnum = "GET" | "HEAD" | "POST" | "PUT" | "PATCH" | "DELETE" | "OPTIONS" | "TRACE" ;

