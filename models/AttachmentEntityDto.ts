/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails and SMS from dynamically allocated email addresses and phone numbers. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * OpenAPI spec version: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http.ts';

/**
* DTO representation of an attachment.
*/
export class AttachmentEntityDto {
    /**
    * The unique identifier for this attachment.
    */
    'id': string;
    /**
    * The identifier of the attachment file
    */
    'attachmentId': string;
    /**
    * The user identifier associated with this attachment.
    */
    'userId': string;
    /**
    * The content type of the attachment.
    */
    'contentType'?: string;
    /**
    * The content length of the attachment in bytes.
    */
    'contentLength'?: number;
    /**
    * The content identifier, which is a unique ID for the content part of the email.
    */
    'contentId'?: string;
    /**
    * The name of the attachment file.
    */
    'name'?: string;
    /**
    * The inbox identifier associated with this attachment.
    */
    'inboxId'?: string;
    /**
    * The timestamp when this attachment was created.
    */
    'createdAt': Date;
    /**
    * The timestamp when this attachment was last updated.
    */
    'updatedAt': Date;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": "uuid"
        },
        {
            "name": "attachmentId",
            "baseName": "attachmentId",
            "type": "string",
            "format": ""
        },
        {
            "name": "userId",
            "baseName": "userId",
            "type": "string",
            "format": "uuid"
        },
        {
            "name": "contentType",
            "baseName": "contentType",
            "type": "string",
            "format": ""
        },
        {
            "name": "contentLength",
            "baseName": "contentLength",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "contentId",
            "baseName": "contentId",
            "type": "string",
            "format": ""
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "inboxId",
            "baseName": "inboxId",
            "type": "string",
            "format": "uuid"
        },
        {
            "name": "createdAt",
            "baseName": "createdAt",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "updatedAt",
            "baseName": "updatedAt",
            "type": "Date",
            "format": "date-time"
        }    ];

    static getAttributeTypeMap() {
        return AttachmentEntityDto.attributeTypeMap;
    }
    
    public constructor() {
    }
}

