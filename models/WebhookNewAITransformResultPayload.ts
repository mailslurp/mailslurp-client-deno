/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails and SMS from dynamically allocated email addresses and phone numbers. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * OpenAPI spec version: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http.ts';

/**
* NEW_AI_TRANSFORM_RESULT webhook payload. Sent to your webhook url endpoint via HTTP POST when a structured data result is generated by the AI Transformer that your webhook is attached to. Use the AI Transform Result ID to fetch the full details.
*/
export class WebhookNewAITransformResultPayload {
    /**
    * Idempotent message ID. Store this ID locally or in a database to prevent message duplication.
    */
    'messageId': string;
    /**
    * ID of webhook entity being triggered
    */
    'webhookId': string;
    /**
    * Name of the event type webhook is being triggered for.
    */
    'eventName': WebhookNewAITransformResultPayloadEventNameEnum;
    /**
    * Name of the webhook being triggered
    */
    'webhookName'?: string;
    /**
    * AI Transform ID of event
    */
    'aiTransformResultId': string;
    /**
    * User ID of event
    */
    'userId': string;
    /**
    * ID of AI Transform
    */
    'aiTransformId': string;
    /**
    * ID of AI Transform mapping
    */
    'aiTransformMappingId'?: string;
    /**
    * ID of entity that triggered the transformation
    */
    'entityId'?: string;
    /**
    * Entity type that triggered the transformation
    */
    'entityType'?: WebhookNewAITransformResultPayloadEntityTypeEnum;
    /**
    * JSON string result of the AI transformation
    */
    'result'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "messageId",
            "baseName": "messageId",
            "type": "string",
            "format": ""
        },
        {
            "name": "webhookId",
            "baseName": "webhookId",
            "type": "string",
            "format": "uuid"
        },
        {
            "name": "eventName",
            "baseName": "eventName",
            "type": "WebhookNewAITransformResultPayloadEventNameEnum",
            "format": ""
        },
        {
            "name": "webhookName",
            "baseName": "webhookName",
            "type": "string",
            "format": ""
        },
        {
            "name": "aiTransformResultId",
            "baseName": "aiTransformResultId",
            "type": "string",
            "format": "uuid"
        },
        {
            "name": "userId",
            "baseName": "userId",
            "type": "string",
            "format": "uuid"
        },
        {
            "name": "aiTransformId",
            "baseName": "aiTransformId",
            "type": "string",
            "format": "uuid"
        },
        {
            "name": "aiTransformMappingId",
            "baseName": "aiTransformMappingId",
            "type": "string",
            "format": "uuid"
        },
        {
            "name": "entityId",
            "baseName": "entityId",
            "type": "string",
            "format": "uuid"
        },
        {
            "name": "entityType",
            "baseName": "entityType",
            "type": "WebhookNewAITransformResultPayloadEntityTypeEnum",
            "format": ""
        },
        {
            "name": "result",
            "baseName": "result",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return WebhookNewAITransformResultPayload.attributeTypeMap;
    }
    
    public constructor() {
    }
}


export type WebhookNewAITransformResultPayloadEventNameEnum = "EMAIL_RECEIVED" | "NEW_AI_TRANSFORM_RESULT" | "NEW_EMAIL" | "NEW_CONTACT" | "NEW_ATTACHMENT" | "EMAIL_OPENED" | "EMAIL_READ" | "DELIVERY_STATUS" | "BOUNCE" | "BOUNCE_RECIPIENT" | "NEW_SMS" | "NEW_GUEST_USER" ;
export type WebhookNewAITransformResultPayloadEntityTypeEnum = "INBOX" | "PHONE" ;

