/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://www.mailslurp.com/docs/) - [Examples](https://github.com/mailslurp/examples) repository 
 *
 * OpenAPI spec version: 6.5.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { BasicAuthOptions } from './BasicAuthOptions.ts';
import { HttpFile } from '../http/http.ts';

/**
* Options for creating a webhook. Webhooks can be attached to inboxes and MailSlurp will POST a webhook payload to the URL specified whenever the inbox receives an email. Webhooks are great for processing many inbound emails.
*/
export class CreateWebhookOptions {
    'basicAuth'?: BasicAuthOptions;
    /**
    * Optional webhook event name. Default is `EMAIL_RECEIVED`. Payload differ according to the webhook event name.
    */
    'eventName'?: CreateWebhookOptionsEventNameEnum;
    /**
    * Optional name for the webhook
    */
    'name'?: string;
    /**
    * Public URL on your server that MailSlurp can post WebhookNotification payload to when an email is received. The payload of the submitted JSON is described by https://api.mailslurp.com/schemas/webhook-payload
    */
    'url'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "basicAuth",
            "baseName": "basicAuth",
            "type": "BasicAuthOptions",
            "format": ""
        },
        {
            "name": "eventName",
            "baseName": "eventName",
            "type": "CreateWebhookOptionsEventNameEnum",
            "format": ""
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "url",
            "baseName": "url",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return CreateWebhookOptions.attributeTypeMap;
    }
    
    public constructor() {
    }
}


export type CreateWebhookOptionsEventNameEnum = "EMAIL_RECEIVED" | "NEW_EMAIL" | "NEW_CONTACT" | "NEW_ATTACHMENT" ;

