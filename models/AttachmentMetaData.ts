/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * OpenAPI spec version: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http.ts';

/**
* Meta data associated with an attachment. Attachments are stored as byte blobs so the meta data is stored separately.
*/
export class AttachmentMetaData {
    /**
    * Name of attachment if given
    */
    'name': string;
    /**
    * Content type of attachment such as `image/png`
    */
    'contentType': string;
    /**
    * Size of attachment in bytes
    */
    'contentLength': number;
    /**
    * ID of attachment. Can be used to with attachment controller endpoints to download attachment or with sending methods to attach to an email.
    */
    'id': string;
    /**
    * CID of attachment
    */
    'contentId'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "contentType",
            "baseName": "contentType",
            "type": "string",
            "format": ""
        },
        {
            "name": "contentLength",
            "baseName": "contentLength",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": ""
        },
        {
            "name": "contentId",
            "baseName": "contentId",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return AttachmentMetaData.attributeTypeMap;
    }
    
    public constructor() {
    }
}

