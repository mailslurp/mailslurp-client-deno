/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails and SMS from dynamically allocated email addresses and phone numbers. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * OpenAPI spec version: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { EmailRecipientsProjection } from './EmailRecipientsProjection.ts';
import { SenderProjection } from './SenderProjection.ts';
import { HttpFile } from '../http/http.ts';

/**
* An email thread is a message thread created for a email based on Message-ID, In-Reply-To, and References headers
*/
export class EmailThreadProjection {
    'recipients'?: EmailRecipientsProjection;
    'sender'?: SenderProjection;
    /**
    * Inbox ID
    */
    'inboxId'?: string;
    /**
    * User ID
    */
    'userId': string;
    /**
    * Updated at DateTime
    */
    'updatedAt': Date;
    /**
    * Created at DateTime
    */
    'createdAt': Date;
    /**
    * To recipients
    */
    'to': Array<string>;
    /**
    * CC recipients
    */
    'cc'?: Array<string>;
    /**
    * BCC recipients
    */
    'bcc'?: Array<string>;
    /**
    * Has attachments
    */
    'hasAttachments': boolean;
    /**
    * Has unread
    */
    'unread': boolean;
    /**
    * Number of messages in the thread
    */
    'messageCount': number;
    /**
    * Last body excerpt
    */
    'lastBodyExcerpt'?: string;
    /**
    * Last text excerpt
    */
    'lastTextExcerpt'?: string;
    /**
    * Last email created time
    */
    'lastCreatedAt'?: Date;
    /**
    * Last sender
    */
    'lastFrom'?: string;
    'lastSender'?: SenderProjection;
    /**
    * Thread topic subject
    */
    'subject'?: string;
    /**
    * ID of email thread
    */
    'id': string;
    /**
    * From sender
    */
    'from'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "recipients",
            "baseName": "recipients",
            "type": "EmailRecipientsProjection",
            "format": ""
        },
        {
            "name": "sender",
            "baseName": "sender",
            "type": "SenderProjection",
            "format": ""
        },
        {
            "name": "inboxId",
            "baseName": "inboxId",
            "type": "string",
            "format": "uuid"
        },
        {
            "name": "userId",
            "baseName": "userId",
            "type": "string",
            "format": "uuid"
        },
        {
            "name": "updatedAt",
            "baseName": "updatedAt",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "createdAt",
            "baseName": "createdAt",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "to",
            "baseName": "to",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "cc",
            "baseName": "cc",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "bcc",
            "baseName": "bcc",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "hasAttachments",
            "baseName": "hasAttachments",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "unread",
            "baseName": "unread",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "messageCount",
            "baseName": "messageCount",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "lastBodyExcerpt",
            "baseName": "lastBodyExcerpt",
            "type": "string",
            "format": ""
        },
        {
            "name": "lastTextExcerpt",
            "baseName": "lastTextExcerpt",
            "type": "string",
            "format": ""
        },
        {
            "name": "lastCreatedAt",
            "baseName": "lastCreatedAt",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "lastFrom",
            "baseName": "lastFrom",
            "type": "string",
            "format": ""
        },
        {
            "name": "lastSender",
            "baseName": "lastSender",
            "type": "SenderProjection",
            "format": ""
        },
        {
            "name": "subject",
            "baseName": "subject",
            "type": "string",
            "format": ""
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": "uuid"
        },
        {
            "name": "from",
            "baseName": "from",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return EmailThreadProjection.attributeTypeMap;
    }
    
    public constructor() {
    }
}

